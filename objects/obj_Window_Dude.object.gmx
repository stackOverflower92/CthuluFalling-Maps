<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Everything
my_string = "initial";
default_text = "initial";
new_string = "";
typed_letters = 0;
can_type = true;
can_draw = true;
string_x = x //200;
string_y = y //200;
pages = 1;
current_page = 1;
sharp = "#";
max_lines = 3;
current_line = 0;
chars_drawn = 1;
line_len = 23;
sharp_n = 0;
lines_per_page = 3;
end_page_pressed = false;
border_bool = true;
rect_w = 215; rect_h = 50;
triggered = false;
gap = 0;
type_fast = false;
letters_amount = 0.3;
original_string_length = string_length(my_string);
typed_chars_total = 0;
target_obj = obj_MainChar;

//insert new lines
for (i = 0; i &lt; string_length(my_string); i++)
    if ((i % line_len) == 0 &amp;&amp; i != 0)
        my_string = string_insert(sharp, my_string, i)
        
//counting pages
for (i = 0; i &lt; string_length(my_string); i++){
    if (string_char_at(my_string, i) == '#'){
        sharp_n++;
    }    
}

pages = ceil(sharp_n / lines_per_page);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw dialog

//local variables for screen and viewport stuff
var begin_count = 0;
var VIEWPORT_WIDTH = window_get_width();
var VIEWPORT_HEIGHT = window_get_height();
var DEVICE_SCREEN_WIDTH = display_get_width();
var DEVICE_SCREEN_HEIGHT = display_get_height();
var VIEWPORT_X = view_xport[0];
var VIEWPORT_Y = view_yport[0];

//First rect
//left up point
var p1x = target_obj.x - 20; //obj_MainChar.x - 20;
var p1y = target_obj.y - 80; //obj_MainChar.y - 80;

//right down point
var p2x = p1x + rect_w;
var p2y = p1y + rect_h;

//Second rect (border)
//left up point
var p1x_2 = p1x - 1;
var p1y_2 = p1y - 1;

//right down point
var p2x_2 = p2x + 1;
var p2y_2 = p2y + 1;

if (default_text != my_string){
    //insert new lines
    for (i = 0; i &lt; string_length(my_string); i++)
        if ((i % line_len) == 0 &amp;&amp; i != 0)
            my_string = string_insert(sharp, my_string, i)
        
    //counting pages
    for (i = 0; i &lt; string_length(my_string); i++){
        if (string_char_at(my_string, i) == '#'){
            sharp_n++;
        }
    }    

    //calculating number of pages to draw
    pages = ceil(sharp_n / lines_per_page);

    //setting variables
    triggered = true;
    can_type = true;
    can_draw = true;
    typed_letters = 0;
    default_text = my_string;
}

//This block will be executed only after the trigger event
if (triggered == true){
    //if we can draw stuff
    if (can_draw == true){
        draw_rectangle_color(p1x, p1y, p2x , p2y, c_gray, c_gray, c_dkgray, c_dkgray, false);
        draw_rectangle_color(p1x_2, p1y_2, p2x_2, p2y_2, c_green, c_green, c_green, c_green, c_green);
    }
    
    //if we are in the middle of a line
    if (typed_letters &lt; string_length(my_string)){
        if (type_fast == false) letters_amount = 0.3;
        else letters_amount = 1;
        
        typed_letters += letters_amount;
    }
    
    //if we are at the end of the whole text
    if (typed_letters == string_length(my_string)){
        can_type = false;
        can_draw = true;
    }
    
    //if last line of current page is reached
    if (current_line == max_lines){
        letters_amount = 0;
        //if current page is the last one 
        if (current_page == pages){
            //stop typing
            can_type = false;
            
            //if user presses enter to close the dialog
            if (keyboard_check(vk_f2)){
                show_message("end of all");
                
                type_fast = false;
                end_page_pressed = true;
                can_draw = false;
                triggered = false;
                exit;
            }            
            typed_letters = 0;
        }
        //if current page is not the last one, then
        else{
            //reset typing speed     
            if (type_fast == true) type_fast = false;
            
            //setting stuff to initial state  
            current_page++;
            can_type = false;       
            current_line = 0;
            
            //shorten the string to continue typing       
            new_string = string_copy(my_string, ceil(typed_letters), string_length(my_string) - ceil(typed_letters));
            typed_letters = 0;
            my_string = new_string
            new_string = "";
            can_type = true;
            chars_drawn = 0;
            letters_amount = 0.3;
            gap = 0;
        }
    }
    
    //if we can type than we print with the effect of typing-machine
    if (can_type == true){
        construct_string = string_copy(my_string, 0, ceil(typed_letters));
        draw_text(p1x + 3, p1y + 4, construct_string);
    }
    else{
        draw_text(p1x + 3, p1y + 4, construct_string);
    }
    
    //counting chars drawn and playing typing sound
    if (floor(typed_letters) == chars_drawn + gap + 1){ chars_drawn++; audio_play_sound(type_sound, 10, false); }
    
    //if we reached the end of the current lint    
    if (chars_drawn == line_len){ current_line++; chars_drawn = 1; gap += line_len;}
    
    //F1 is the key to accelerate typing
    if (keyboard_check(vk_f1)) type_fast = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
